/*
 * Skybot, a multipurpose discord bot
 *      Copyright (C) 2017 - 2018  Duncan "duncte123" Sterken & Ramid "ramidzkh" Khan
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published
 * by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

import org.apache.tools.ant.filters.ReplaceTokens

buildscript {
    ext.kotlin_version = '1.2.71'

    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

plugins {
    id 'java'
    id 'idea'
    id 'maven'
    id 'application'
    id 'com.github.johnrengelman.shadow' version '2.0.4'
    id 'org.jetbrains.kotlin.jvm' version '1.2.71'
}
apply plugin: 'kotlin'

group = "ml.duncte123.skybot"
version "3.81.2_${getGitHash()}"

def javaVersion = JavaVersion.VERSION_11

sourceCompatibility = javaVersion
targetCompatibility = javaVersion

task wrapper(type: Wrapper) {
    gradleVersion = '4.10.1'
}

repositories {
    jcenter()

    // Use JitPack if jcenter doesn't find, not download everything from JitPack ;)
    maven {
        name 'jitpack'
        url 'https://jitpack.io'
    }
}

dependencies {
    //Weeb api
    compile group: 'me.duncte123', name: 'weebJava', version: '2.1.1'
    
    //My little utils
    compile group: 'com.github.duncte123', name: 'botCommons', version: 'fbb8f98'

    //JDA (java discord api)
//    compile (group: 'com.github.DV8FromTheWorld', name: 'JDA', version: 'a7c5b3c') {
    compile(group: 'net.dv8tion', name: 'JDA', version: '3.8.1_439') {
        exclude module: 'opus-java'
    }

    //Lavaplayer/Lavalink
    compile group: 'com.sedmelluq', name: 'lavaplayer', version: '1.3.10'
//    compile group: 'com.github.FredBoat', name: 'Lavalink-Client', version: '125b074'
    compile group: 'com.github.DuncteBot', name: 'Lavalink-Client', version: '08e1ce5'

    // MySQL
    compile group: 'mysql', name: 'mysql-connector-java', version: '8.0.13'
    // SQLite
    compile group: 'org.xerial', name: 'sqlite-jdbc', version: '3.25.2'

    //groovy
//    compile group: 'org.codehaus.groovy', name: 'groovy-jsr223', version: '2.5.2'
    implementation group: 'com.github.apache.groovy', name: 'groovy-jsr223', version: '43d9f2178f'
    
    //groovy sandbox
    compile group: 'org.kohsuke', name: 'groovy-sandbox', version: '1.19'

    // Logback classic
    compile group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'

    // cp scraping stuffz
    compile group: 'org.reflections', name: 'reflections', version: '0.9.11'

    //Spotify API
    compile group: 'se.michaelthelin.spotify', name: 'spotify-web-api-java', version: '2.1.1'
    // Youtube api
    compile group: 'com.google.apis', name: 'google-api-services-youtube', version: 'v3-rev206-1.25.0'

    //Add kotlin
    compile group: 'org.jetbrains.kotlin', name: 'kotlin-stdlib', version: kotlin_version
    compile group: 'org.jetbrains.kotlin', name: 'kotlin-reflect', version: kotlin_version
    compile group: 'org.jetbrains.kotlinx', name: 'kotlinx-coroutines-core', version: '0.30.2'

    //Spark for website
    compile group: 'com.sparkjava', name: 'spark-kotlin', version: '1.0.0-alpha'
    compile group: 'com.sparkjava', name: 'spark-core', version: '2.8.0' // Override spark to the latest version
    compile group: 'com.sparkjava', name: 'spark-template-jtwig', version: '2.7.1'
    // Oauth
    compile group: 'com.github.JDA-Applications.JDA-Utilities', name: 'jda-utilities-oauth2', version: 'b98962c'

    compile group: 'com.jagrosh', name: 'JagTag', version: '0.5'

    //Wolfaram alpha
    implementation group: 'com.github.DuncteBot', name: 'wolfram-alpha-java-binding', version: '5c123ae'
    
    // https://mvnrepository.com/artifact/org.ocpsoft.prettytime/prettytime
    compile group: 'org.ocpsoft.prettytime', name: 'prettytime', version: '4.0.2.Final'
}

task sourcesForRelease(type: Copy) {
    from('src/main/java') {
        include '**/Settings.java'
        filter(ReplaceTokens, tokens: [
                versionObj   : project.version.toString(),
                kotlinVersion: kotlin_version.toString()
        ])
    }
    into 'build/filteredSrc'

    includeEmptyDirs = false
}

task generateJavaSources(type: SourceTask) {
    def javaSources = sourceSets.main.allJava.filter {
        it.name != 'Settings.java'
    }
    source = javaSources + sourcesForRelease.destinationDir

    dependsOn sourcesForRelease
}

compileJava {
    source = generateJavaSources.source

    options.encoding = 'UTF-8'

    options.compilerArgs += ["-Xlint:deprecation", "-Xlint:unchecked"]

    dependsOn generateJavaSources
}

shadowJar {
    mainClassName = "ml.duncte123.skybot.SkyBot"
    classifier = null
    libsDirName = "../"
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

kotlin {
    experimental {
        coroutines "enable"
    }
}

build {
    dependsOn clean
    dependsOn jar

    jar.mustRunAfter clean
}

task printVersion {
    println version
}

def getGitHash() {
    try {
        def stdout = new ByteArrayOutputStream()
        exec {
            commandLine 'git', 'rev-parse', '--short', 'HEAD'
            standardOutput = stdout
        }
        return stdout.toString().trim()
    } catch (Throwable ignored) {
        // Probably ramidzkh's problem
        return 'unknown'
    }
}

