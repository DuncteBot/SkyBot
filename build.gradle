/*
 * Skybot, a multipurpose discord bot
 *      Copyright (C) 2017 - 2019  Duncan "duncte123" Sterken & Ramid "ramidzkh" Khan
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published
 * by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

import org.apache.tools.ant.filters.ReplaceTokens

buildscript {
    ext.kotlin_version = '1.3.20'

    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

plugins {
    id 'java'
    id 'idea'
    id 'maven'
    id 'application'
    id 'com.github.johnrengelman.shadow' version '2.0.4'
    id 'org.jetbrains.kotlin.jvm' version '1.3.20'
    id 'com.github.breadmoirai.github-release' version '2.2.0'
}
apply plugin: 'kotlin'

group = 'ml.duncte123.skybot'
version "3.87.0_${getGitHash()}"

def javaVersion = JavaVersion.VERSION_1_10

sourceCompatibility = javaVersion
targetCompatibility = javaVersion

task wrapper(type: Wrapper) {
    gradleVersion = '4.10.3'
}

repositories {
    jcenter()
    
    maven {
        name 'Jenkins'
        url 'http://repo.jenkins-ci.org/releases/'
    }

    // Use JitPack if jcenter doesn't find, not download everything from JitPack ;)
    maven {
        name 'jitpack'
        url 'https://jitpack.io'
    }
}

dependencies {
    implementation group: 'me.duncte123', name: 'loadingbar', version: '1.2.0_10'
    
    //Weeb api
    implementation group: 'me.duncte123', name: 'weebJava', version: '2.2.0_13'
    
    //My little utils
    implementation group: 'com.github.duncte123', name: 'botCommons', version: '2644ca6067'

    //JDA (java discord api)
    implementation(group: 'net.dv8tion', name: 'JDA', version: '3.8.1_457') {
        exclude module: 'opus-java'
    }

    //Lavaplayer/Lavalink
    implementation group: 'com.sedmelluq', name: 'lavaplayer', version: '1.3.10'
    implementation group: 'com.github.DuncteBot', name: 'Lavalink-Client', version: 'c14b92d'
    
    // SQLite
    implementation group: 'org.xerial', name: 'sqlite-jdbc', version: '3.25.2'

    //groovy
    implementation group: 'org.codehaus.groovy', name: 'groovy-jsr223', version: '2.5.5'
    
    //groovy sandbox
    implementation group: 'org.kohsuke', name: 'groovy-sandbox', version: '1.20'

    // Logback classic
    implementation group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'

    // cp scraping stuffz
    implementation group: 'org.reflections', name: 'reflections', version: '0.9.11'

    //Spotify API
    implementation group: 'se.michaelthelin.spotify', name: 'spotify-web-api-java', version: '2.1.1'
    
    // Youtube api
    implementation group: 'com.google.apis', name: 'google-api-services-youtube', version: 'v3-rev206-1.25.0'

    //Add kotlin
    implementation group: 'org.jetbrains.kotlin', name: 'kotlin-stdlib', version: kotlin_version
    implementation group: 'org.jetbrains.kotlin', name: 'kotlin-reflect', version: kotlin_version
    implementation group: 'org.jetbrains.kotlinx', name: 'kotlinx-coroutines-core', version: '1.1.0'

    //Spark for website
    implementation group: 'com.sparkjava', name: 'spark-kotlin', version: '1.0.0-alpha'
    implementation group: 'com.sparkjava', name: 'spark-core', version: '2.8.0' // Override spark to the latest version
    implementation group: 'com.sparkjava', name: 'spark-template-jtwig', version: '2.7.1'
    // Oauth
    implementation group: 'com.github.JDA-Applications.JDA-Utilities', name: 'jda-utilities-oauth2', version: 'b98962c'

    implementation group: 'com.jagrosh', name: 'JagTag', version: '0.5'
    
    //Wolfaram alpha
    implementation group: 'com.github.DuncteBot', name: 'wolfram-alpha-java-binding', version: '5c123ae'
    
    // https://mvnrepository.com/artifact/org.ocpsoft.prettytime/prettytime
    implementation group: 'org.ocpsoft.prettytime', name: 'prettytime', version: '4.0.2.Final'
    
    // Webhooks
    implementation group: 'club.minnced', name: 'discord-webhooks', version: '0.1.4'
    
    //Sentry
    implementation group: 'io.sentry', name: 'sentry-logback', version: '1.7.17'
}

task sourcesForRelease(type: Copy) {
    from('src/main/java') {
        include '**/Settings.java'
        filter(ReplaceTokens, tokens: [
                versionObj   : project.version.toString(),
                kotlinVersion: kotlin_version.toString()
        ])
    }
    into 'build/filteredSrc'

    includeEmptyDirs = false
}

task generateJavaSources(type: SourceTask) {
    def javaSources = sourceSets.main.allJava.filter {
        it.name != 'Settings.java'
    }
    source = javaSources + sourcesForRelease.destinationDir

    dependsOn sourcesForRelease
}

compileJava {
    source = generateJavaSources.source

    options.encoding = 'UTF-8'

    options.compilerArgs += ['-Xlint:deprecation', '-Xlint:unchecked']

    dependsOn generateJavaSources
}

shadowJar {
    mainClassName = 'ml.duncte123.skybot.SkyBot'
    classifier = null
    libsDirName = '../'
}

compileKotlin {
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

build {
    dependsOn clean
    dependsOn jar

    jar.mustRunAfter clean
}

task printVersion {
    println version
}

githubRelease {
    token "${System.getenv('GITHUB_TOKEN')}"
    owner 'DuncteBot'
    repo 'SkyBot'
    releaseAssets shadowJar.outputs.getFiles().toList()
    overwrite true
}

def getGitHash() {
    try {
        def stdout = new ByteArrayOutputStream()
        exec {
            commandLine 'git', 'rev-parse', '--short', 'HEAD'
            standardOutput = stdout
        }
        return stdout.toString().trim()
    } catch (Throwable ignored) {
        // Probably ramidzkh's problem
        return 'DEV'
    }
}

